from flask import Flask, jsonify, request
from flask_sqlalchemy import SQLAlchemy
from flask_cors import CORS
import os

app = Flask(__name__)
CORS(app)  # 允许跨域请求

# 设置数据库路径和连接
basedir = os.path.abspath(os.path.dirname(__file__))
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///' + os.path.join(basedir, 'contacts.db')
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

# 定义联系人模型
class Contact(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80), nullable=False)
    name_pinyin = db.Column(db.String(80), nullable=True)
    phone = db.Column(db.String(20), nullable=False)
    email = db.Column(db.String(120), nullable=True)
    group = db.Column(db.String(80), nullable=True)
    company = db.Column(db.String(80), nullable=True)
    position = db.Column(db.String(80), nullable=True)

    def to_dict(self):
        return {
            'id': self.id,
            'name': self.name,
            'name_pinyin': self.name_pinyin,
            'phone': self.phone,
            'email': self.email,
            'group': self.group,
            'company': self.company,
            'position': self.position
        }

# 创建数据库表
with app.app_context():
    db.create_all()

# 获取所有联系人
@app.route('/contacts', methods=['GET'])
def get_contacts():
    contacts = Contact.query.all()
    return jsonify([contact.to_dict() for contact in contacts])

# 添加新联系人
@app.route('/contacts', methods=['POST'])
def add_contact():
    data = request.get_json()
    new_contact = Contact(
        name=data.get('name'),
        name_pinyin=data.get('name_pinyin'),
        phone=data.get('phone'),
        email=data.get('email'),
        group=data.get('group'),
        company=data.get('company'),
        position=data.get('position')
    )
    db.session.add(new_contact)
    db.session.commit()
    return jsonify(new_contact.to_dict()), 201

# 更新联系人信息
@app.route('/contacts/<int:contact_id>', methods=['PUT'])
def update_contact(contact_id):
    data = request.get_json()
    contact = Contact.query.get_or_404(contact_id)
    contact.name = data.get('name', contact.name)
    contact.name_pinyin = data.get('name_pinyin', contact.name_pinyin)
    contact.phone = data.get('phone', contact.phone)
    contact.email = data.get('email', contact.email)
    contact.group = data.get('group', contact.group)
    contact.company = data.get('company', contact.company)
    contact.position = data.get('position', contact.position)
    db.session.commit()
    return jsonify(contact.to_dict()), 200

# 删除联系人
@app.route('/contacts/<int:contact_id>', methods=['DELETE'])
def delete_contact(contact_id):
    contact = Contact.query.get_or_404(contact_id)
    db.session.delete(contact)
    db.session.commit()
    return jsonify({"message": "Contact deleted successfully"}), 200

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)


</body>
</html>
